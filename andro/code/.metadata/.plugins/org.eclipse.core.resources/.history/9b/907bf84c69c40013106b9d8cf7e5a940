/*
 * Copyright 2012 Greg Milette and Adam Stroud
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * 		http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.CSSE4011.Lab7;

import android.app.Activity;
import android.text.format.DateFormat;
import android.widget.TextView;

public class AudioClipLogWrapper implements AudioClipListener
{
    private TextView log;

    private Activity context;
    
    private double previousFrequency = -1;
    
    private FileIO fileIO;

    public AudioClipLogWrapper(TextView log, Activity context)
    {
        this.log = log;
        this.context = context;
        String dateStamp = (DateFormat.format("dd-MM-yyyy-hh-mm-ss", new java.util.Date()).toString());
        fileIO = new FileIO("/Android/data/com.CSSE4011.Lab7/files/",String.format("audio-%s.txt",dateStamp));

    }

    @Override
    public boolean heard(short[] audioData, int sampleRate)
    {
    	    	
    	final double freq = ZeroCrossing.calculate(sampleRate, audioData);    	
        final int maxAmplitude = AudioUtil.getMaxValue(audioData);
        final double volume = AudioUtil.rootMeanSquared(audioData);
        
        
        final StringBuilder message = new StringBuilder();
        message.append("rms: ").append((int)volume);
        if (maxAmplitude > 25000)
        	message.append("Clap detected");
        if (freq > 500 && freq < 1000)
        	message.append(" whistle recorded");
        message.append(" max: ").append((int)maxAmplitude);
        message.append(" freq: ").append((int)freq);
        
        context.runOnUiThread(new Runnable()
        {
            @Override
            public void run()
            {
               AudioTaskUtil.appendToStartOfLog(log, message.toString());
             }
        });
        fileIO.writeToFile(String.format("%d, %d, %f\n",(int)volume, maxAmplitude, freq));

        return false;
    }
}
