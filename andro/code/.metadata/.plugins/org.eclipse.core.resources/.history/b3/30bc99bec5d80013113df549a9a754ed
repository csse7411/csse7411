package com.office_occupancy;

import android.content.Context;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;

public class Accelerometer implements SensorEventListener {
	private SensorManager mSensorManager;
	Sensor accelerometer;
	Sensor magnetometer;
	Float azimut;
	
	public Accelerometer() {
		  mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
	      accelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
	      magnetometer = mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);	    
	}
	
	public void register() {
	      // for the system's orientation sensor registered listeners
		  mSensorManager.registerListener(this, accelerometer, SensorManager.SENSOR_DELAY_UI);
		  mSensorManager.registerListener(this, magnetometer, SensorManager.SENSOR_DELAY_UI);
	}
	
	public void unregister() {
		  mSensorManager.unregisterListener(this);
	}
	
	float[] mGravity;
	float[] mGeomagnetic;
	Double magAbsVal;
	@Override
	  public void onSensorChanged(SensorEvent event) {
	    if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER)
	      mGravity = event.values;
	    if (event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD)
	      mGeomagnetic = event.values;
	    if (mGravity != null && mGeomagnetic != null) {
	      float R[] = new float[9];
	      float I[] = new float[9];
	      boolean success = SensorManager.getRotationMatrix(R, I, mGravity, mGeomagnetic);
	      if (success) {
	        float orientation[] = new float[3];
	        SensorManager.getOrientation(R, orientation);
	        azimut = orientation[0]; // orientation contains: azimut, pitch and roll
	        Float azimuthInDegress = (float)Math.toDegrees(azimut);
	        if (azimuthInDegress < 0.0f) {
	            azimuthInDegress += 360.0f;
	        }

	           magAbsVal = Math.sqrt(orientation[0]*orientation[0] + orientation[1]*orientation[1] + orientation[2]*orientation[2]);
	        
	        System.out.println("Angle from North:"+azimuthInDegress+"\r\nField Strength:"+magAbsVal.toString());	        
	      }
	    }
	  }

	@Override
	public void onAccuracyChanged(Sensor arg0, int arg1) {
		// TODO Auto-generated method stub
		
	}
}
